version: 2.1

orbs:

  python: circleci/python@1.5.0
  heroku: circleci/heroku@1.2.6

jobs:
  build-and-test: 
    docker:
      - image: python:3.10-alpine
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: python linting
          command: flake8
      - run:
          name: Run unit tests
          command: pytest
  containerization:
     #https://circleci.com/docs/env-vars
      machine: true
      steps:
      - checkout
      - run:
            name: Authenticate
            command: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
      - run:
            name: Build & push
            command: docker build --tag ${DOCKER_USER}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1} . 
      - run: 
            name: push
            command: docker push ${DOCKER_USER}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}
  deploy:
      machine: true
      steps:
        - checkout
        - run:
            name: Build and push Docker image to Heroku
            command: |
              sudo curl https://cli-assets.heroku.com/install.sh | sh
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a python-django-starter web
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a python-django-starter web

workflows:
  build-test-deploy:
    jobs:
      - build-and-test
      - containerization:
          requires:
            - build-and-test
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - containerization
          filters:
            branches:
              only: main
